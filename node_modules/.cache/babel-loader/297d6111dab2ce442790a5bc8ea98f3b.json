{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L1000246\\\\Desktop\\\\Modelado2\\\\Modelado\\\\src\\\\components\\\\Map.js\";\nimport React, { useEffect, useMemo } from 'react';\nimport { getPoints } from '../helpers/helper';\n\nconst functionPlot = require(\"function-plot\");\n\nconst Map = ({\n  points,\n  pValue,\n  qValue\n}) => {\n  // puntos que construyen la function de la trayectorias\n  const pointsTrajectoryFunction = useMemo(() => getPoints(pValue, qValue), [qValue, pValue]);\n  const options = useMemo(() => ({\n    title: 'Diagrama p vs q',\n    yAxis: {\n      domain: [-5, 5]\n    },\n    width: 800,\n    height: 400,\n    grid: true,\n    data: [{\n      fn: \"x^2/4\"\n    }, {\n      points: pointsTrajectoryFunction,\n      fnType: 'points',\n      graphType: 'polyline'\n    }, {\n      points: [0, 0],\n      fnType: 'points',\n      graphType: 'scatter'\n    }]\n  }), [pointsTrajectoryFunction]);\n  useEffect(() => {\n    options.target = document.querySelector(\"#map\");\n    options.data[2] = {\n      points: points.length > 0 ? [points] : [0, 0],\n      fnType: 'points',\n      graphType: 'scatter',\n      color: 'red',\n      attr: {\n        r: 3\n      }\n    };\n    functionPlot(options);\n  }, [points, options]);\n  return React.createElement(\"div\", {\n    id: \"map\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\L1000246\\Desktop\\Modelado2\\Modelado\\src\\components\\Map.js"],"names":["React","useEffect","useMemo","getPoints","functionPlot","require","Map","points","pValue","qValue","pointsTrajectoryFunction","options","title","yAxis","domain","width","height","grid","data","fn","fnType","graphType","target","document","querySelector","length","color","attr","r"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAD,KAA8B;AACtC;AACA,QAAMC,wBAAwB,GAAGR,OAAO,CAAC,MAAMC,SAAS,CAACK,MAAD,EAAQC,MAAR,CAAhB,EAAiC,CAACA,MAAD,EAASD,MAAT,CAAjC,CAAxC;AACA,QAAMG,OAAO,GAAGT,OAAO,CAAC,OAAO;AAC3BU,IAAAA,KAAK,EAAE,iBADoB;AAE3BC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL;AAAV,KAFoB;AAG3BC,IAAAA,KAAK,EAAE,GAHoB;AAI3BC,IAAAA,MAAM,EAAE,GAJmB;AAK3BC,IAAAA,IAAI,EAAE,IALqB;AAM3BC,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,EAAE,EAAE;AADR,KADE,EAIF;AACIZ,MAAAA,MAAM,EAAEG,wBADZ;AAEIU,MAAAA,MAAM,EAAE,QAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KAJE,EASF;AACId,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,CADZ;AAEIa,MAAAA,MAAM,EAAE,QAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KATE;AANqB,GAAP,CAAD,EAqBpB,CAACX,wBAAD,CArBoB,CAAvB;AAuBAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACW,MAAR,GAAiBC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAjB;AACAb,IAAAA,OAAO,CAACO,IAAR,CAAa,CAAb,IAAkB;AACdX,MAAAA,MAAM,EAAEA,MAAM,CAACkB,MAAP,GAAgB,CAAhB,GAAoB,CAAClB,MAAD,CAApB,GAA+B,CAAC,CAAD,EAAG,CAAH,CADzB;AAEda,MAAAA,MAAM,EAAE,QAFM;AAGdC,MAAAA,SAAS,EAAE,SAHG;AAIdK,MAAAA,KAAK,EAAE,KAJO;AAKdC,MAAAA,IAAI,EAAE;AACFC,QAAAA,CAAC,EAAE;AADD;AALQ,KAAlB;AASAxB,IAAAA,YAAY,CAACO,OAAD,CAAZ;AACH,GAZQ,EAYP,CAACJ,MAAD,EAAQI,OAAR,CAZO,CAAT;AAcA,SACI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA3CD;;AA6CA,eAAeL,GAAf","sourcesContent":["import React, { useEffect,useMemo } from 'react';\r\nimport { getPoints } from '../helpers/helper';\r\nconst functionPlot = require(\"function-plot\");\r\n\r\nconst Map = ({points, pValue, qValue}) => {\r\n    // puntos que construyen la function de la trayectorias\r\n    const pointsTrajectoryFunction = useMemo(() => getPoints(pValue,qValue) ,[qValue, pValue]);\r\n    const options = useMemo(() => ({\r\n        title: 'Diagrama p vs q',\r\n        yAxis: { domain: [-5, 5] },\r\n        width: 800,\r\n        height: 400,\r\n        grid: true,\r\n        data: [\r\n            {\r\n                fn: \"x^2/4\",\r\n            },\r\n            {\r\n                points: pointsTrajectoryFunction,\r\n                fnType: 'points',\r\n                graphType: 'polyline',\r\n            },\r\n            {\r\n                points: [0,0],\r\n                fnType: 'points',\r\n                graphType: 'scatter',\r\n            }\r\n        ]\r\n    }),[pointsTrajectoryFunction]);\r\n\r\n    useEffect(() => {\r\n        options.target = document.querySelector(\"#map\");\r\n        options.data[2] = {\r\n            points: points.length > 0 ? [points] : [0,0],\r\n            fnType: 'points',\r\n            graphType: 'scatter',\r\n            color: 'red',\r\n            attr: {\r\n                r: 3,\r\n            },\r\n        };\r\n        functionPlot(options);\r\n    },[points,options]);\r\n\r\n    return (\r\n        <div id=\"map\"/>\r\n    );\r\n};\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}
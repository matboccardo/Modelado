{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\L1000246\\\\Desktop\\\\Modelado2\\\\Modelado\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\L1000246\\\\Desktop\\\\Modelado2\\\\Modelado\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\L1000246\\\\Desktop\\\\Modelado2\\\\Modelado\\\\src\\\\components\\\\Home.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport PhaseDiagram from './PhaseDiagram';\nimport Map from './Map';\nimport MapQ from './MapQ';\nimport MapP from './MapP';\nimport { AppBar, Toolbar, Typography, makeStyles, TextField, Button, Grid, GridListTile, GridList } from '@material-ui/core';\n\nconst nerdamer = require('nerdamer/all');\n\nconst algebrite = require('algebrite');\n\nwindow.d3 = d3;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  appBar: {\n    marginBottom: theme.spacing(2)\n  }\n}));\nexport const Home = () => {\n  const classes = useStyles();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        func = _useState2[0],\n        setFunc = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        funcQvsK = _useState4[0],\n        setFuncQvsK = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        funcPvsK = _useState6[0],\n        setFuncPvsK = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        points = _useState8[0],\n        setPoints = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        qkValue = _useState10[0],\n        setqKValue = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        pkValue = _useState12[0],\n        setpKValue = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        pValue = _useState14[0],\n        setP = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        qValue = _useState16[0],\n        setQ = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        showMatriz = _useState18[0],\n        setShowMatriz = _useState18[1];\n\n  function calculateFunction() {\n    //TRAZA DE LA MATRIZ\n    const p = algebrite.simplify(values.inputA.toString() + '+' + values.inputD.toString()).toString(); //DETERMINANTE DE LA MATRIZ\n\n    let matriz = '[[' + values.inputA + ',' + values.inputB + '],[' + values.inputC + ',' + values.inputD + ']]';\n    const q = algebrite.det(matriz).toString();\n    const regExp = /[a-z|A-Z]/;\n    setqKValue(null);\n    setpKValue(null);\n    setFuncQvsK(null);\n    setFuncPvsK(null);\n\n    if (regExp.test(q)) {\n      let qk = q.replace('a', 'x');\n      setqKValue(qk);\n      setFuncQvsK(qk.toString());\n    }\n\n    if (regExp.test(p)) {\n      let pk = p.replace('a', 'x');\n      setpKValue(pk);\n      setFuncPvsK(pk.toString());\n    }\n\n    setQ(q);\n    setP(p);\n    setFunc(nerdamer(\"\".concat(q, \"-((\").concat(p, \")^2)/4\"))); //setInterval(setShowLoading(false),1000);\n\n    return false;\n  }\n\n  const _useState19 = useState({\n    inputA: '1',\n    inputB: 'a',\n    inputC: '2',\n    inputD: 'a'\n  }),\n        _useState20 = _slicedToArray(_useState19, 2),\n        values = _useState20[0],\n        setValues = _useState20[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    style: {\n      backgroundColor: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Sistemas 2D Lineales\"), React.createElement(GridList, {\n    cellHeight: 50,\n    className: classes.gridList,\n    cols: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setShowMatriz(!showMatriz),\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Ingresar matriz\")), React.createElement(GridListTile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => calculateFunction(),\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Calcular sistema\"))))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, showMatriz && React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"inputA\",\n    label: \"Componente a\",\n    value: values.inputA,\n    onChange: handleChange('inputA'),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"inputB\",\n    label: \"Componente b\",\n    value: values.inputB,\n    onChange: handleChange('inputB'),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"inputC\",\n    label: \"Componente c\",\n    value: values.inputC,\n    onChange: handleChange('inputC'),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"inputD\",\n    label: \"Componente d\",\n    value: values.inputD,\n    onChange: handleChange('inputD'),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), func && React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"q(Det(A)) = \".concat(qValue))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"p(Traza(A)) = \".concat(pValue)))))), React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, func && React.createElement(Map, {\n    points: points,\n    qValue: qValue,\n    pValue: pValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(PhaseDiagram, {\n    handleSetPoints: setPoints,\n    func: func,\n    pValue: pValue,\n    qValue: qValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, funcQvsK && React.createElement(MapQ, {\n    points: points,\n    qValue: qkValue,\n    pValue: pValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, funcPvsK && React.createElement(MapP, {\n    points: points,\n    qValue: qkValue,\n    pValue: pkValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["C:\\Users\\L1000246\\Desktop\\Modelado2\\Modelado\\src\\components\\Home.jsx"],"names":["React","useState","d3","PhaseDiagram","Map","MapQ","MapP","AppBar","Toolbar","Typography","makeStyles","TextField","Button","Grid","GridListTile","GridList","nerdamer","require","algebrite","window","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","marginBottom","Home","classes","func","setFunc","funcQvsK","setFuncQvsK","funcPvsK","setFuncPvsK","points","setPoints","qkValue","setqKValue","pkValue","setpKValue","pValue","setP","qValue","setQ","showMatriz","setShowMatriz","calculateFunction","p","simplify","values","inputA","toString","inputD","matriz","inputB","inputC","q","det","regExp","test","qk","replace","pk","setValues","handleChange","name","event","target","value","backgroundColor","gridList"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport * as d3 from 'd3';\r\nimport PhaseDiagram from './PhaseDiagram';\r\nimport Map from './Map';\r\nimport MapQ from './MapQ';\r\nimport MapP from './MapP';\r\nimport { AppBar, Toolbar, Typography, makeStyles, TextField, Button, Grid, GridListTile, GridList } from '@material-ui/core';\r\nconst nerdamer = require('nerdamer/all');\r\nconst algebrite = require('algebrite');\r\n\r\nwindow.d3 = d3;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const Home = () => {\r\n  const classes = useStyles();\r\n  const [func, setFunc] = useState(null);\r\n  const [funcQvsK, setFuncQvsK] = useState(null);\r\n  const [funcPvsK, setFuncPvsK] = useState(null);\r\n  const [points, setPoints] = useState([]);\r\n  const [qkValue, setqKValue] = useState(null);\r\n  const [pkValue, setpKValue] = useState(null);\r\n  const [pValue, setP] = useState(null);\r\n  const [qValue, setQ] = useState(null);\r\n  const [showMatriz, setShowMatriz] = useState(false);\r\n\r\n  function calculateFunction() {\r\n    //TRAZA DE LA MATRIZ\r\n    const p = algebrite.simplify(values.inputA.toString() + '+' + values.inputD.toString()).toString();\r\n    //DETERMINANTE DE LA MATRIZ\r\n    let matriz = '[[' + values.inputA + ',' + values.inputB + '],[' + values.inputC + ',' + values.inputD + ']]';\r\n    const q = algebrite.det(matriz).toString();\r\n\r\n    const regExp = /[a-z|A-Z]/;\r\n    setqKValue(null);\r\n    setpKValue(null);\r\n    setFuncQvsK(null);\r\n    setFuncPvsK(null);\r\n    if (regExp.test(q)) {\r\n      let qk = q.replace('a', 'x');\r\n      setqKValue(qk);\r\n      setFuncQvsK(qk.toString());\r\n    }\r\n    if (regExp.test(p)) {\r\n      let pk = p.replace('a', 'x');\r\n      setpKValue(pk);\r\n      setFuncPvsK(pk.toString());\r\n    }\r\n    setQ(q);\r\n    setP(p);\r\n    setFunc(nerdamer(`${q}-((${p})^2)/4`));\r\n    //setInterval(setShowLoading(false),1000);\r\n    return false;\r\n  }\r\n\r\n\r\n  const [values, setValues] = useState(\r\n    {\r\n      inputA: '1',\r\n      inputB: 'a',\r\n      inputC: '2',\r\n      inputD: 'a',\r\n    },\r\n  );\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" style={{ backgroundColor: 'black' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Sistemas 2D Lineales\r\n          </Typography>\r\n          <GridList cellHeight={50} className={classes.gridList} cols={2} >\r\n            <GridListTile>\r\n              <Button onClick={() => setShowMatriz(!showMatriz)} variant=\"contained\" color=\"secondary\">Ingresar matriz</Button>\r\n            </GridListTile>\r\n            <GridListTile>\r\n              <Button onClick={() => calculateFunction()} variant=\"contained\" color=\"secondary\">Calcular sistema</Button>\r\n            </GridListTile>\r\n          </GridList>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\">\r\n        {showMatriz && <Grid container item xs={4}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"inputA\"\r\n              label=\"Componente a\"\r\n              value={values.inputA}\r\n              onChange={handleChange('inputA')}\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"inputB\"\r\n              label=\"Componente b\"\r\n              value={values.inputB}\r\n              onChange={handleChange('inputB')}\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"inputC\"\r\n              label=\"Componente c\"\r\n              value={values.inputC}\r\n              onChange={handleChange('inputC')}\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"inputD\"\r\n              label=\"Componente d\"\r\n              value={values.inputD}\r\n              onChange={handleChange('inputD')}\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n          {func &&\r\n            <>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">{`q(Det(A)) = ${qValue}`}</Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">{`p(Traza(A)) = ${pValue}`}</Typography>\r\n              </Grid>\r\n            </>\r\n          }\r\n        </Grid>\r\n        }\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        <Grid container item xs={12}  >\r\n          <Grid item xs={6}>\r\n            {func && <Map\r\n              points={points}\r\n              qValue={qValue}\r\n              pValue={pValue}\r\n            />}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <PhaseDiagram\r\n              handleSetPoints={setPoints}\r\n              func={func}\r\n              pValue={pValue}\r\n              qValue={qValue}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {funcQvsK && <MapQ\r\n              points={points}\r\n              qValue={qkValue}\r\n              pValue={pValue}\r\n            />}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {funcPvsK && <MapP\r\n              points={points}\r\n              qValue={qkValue}\r\n              pValue={pkValue}\r\n            />}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
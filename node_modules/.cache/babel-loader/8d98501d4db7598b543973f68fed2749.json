{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\L1000246\\\\Desktop\\\\Modelado2\\\\Modelado\\\\src\\\\components\\\\MapQ.js\";\nimport React, { useEffect, useMemo } from 'react';\nimport { getPoints } from '../helpers/helper';\n\nconst functionPlot = require(\"function-plot\");\n\nconst MapQ = ({\n  points,\n  pValue,\n  qValue\n}) => {\n  // puntos que construyen la function de la trayectorias\n  const pointsTrajectoryFunction = useMemo(() => getPoints(pValue, qValue), [qValue, pValue]);\n  const options = useMemo(() => ({\n    title: 'Diagrama q vs a',\n    yAxis: {\n      domain: [-5, 5]\n    },\n    width: 800,\n    height: 400,\n    grid: true,\n    data: [{\n      fn: qValue,\n      color: 'blue'\n    }, {\n      points: pointsTrajectoryFunction,\n      fnType: 'points',\n      graphType: 'polyline'\n    }, {\n      points: [0, 0],\n      fnType: 'points',\n      graphType: 'scatter'\n    }]\n  }), [pointsTrajectoryFunction]);\n  useEffect(() => {\n    options.target = document.querySelector(\"#mapq\"); // options.data[2] = {\n    //     points: points.length > 0 ? [points] : [0,0],\n    //     fnType: 'points',\n    //     graphType: 'scatter',\n    //     color: 'red',\n    //     attr: {\n    //         r: 3,\n    //     },\n    // };\n\n    functionPlot(options);\n  }, [points, options]);\n  return React.createElement(\"div\", {\n    id: \"mapq\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nexport default MapQ;","map":{"version":3,"sources":["C:\\Users\\L1000246\\Desktop\\Modelado2\\Modelado\\src\\components\\MapQ.js"],"names":["React","useEffect","useMemo","getPoints","functionPlot","require","MapQ","points","pValue","qValue","pointsTrajectoryFunction","options","title","yAxis","domain","width","height","grid","data","fn","color","fnType","graphType","target","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AACzC;AACA,QAAMC,wBAAwB,GAAGR,OAAO,CAAC,MAAMC,SAAS,CAACK,MAAD,EAASC,MAAT,CAAhB,EAAkC,CAACA,MAAD,EAASD,MAAT,CAAlC,CAAxC;AACA,QAAMG,OAAO,GAAGT,OAAO,CAAC,OAAO;AAC3BU,IAAAA,KAAK,EAAE,iBADoB;AAE3BC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL;AAAV,KAFoB;AAG3BC,IAAAA,KAAK,EAAE,GAHoB;AAI3BC,IAAAA,MAAM,EAAE,GAJmB;AAK3BC,IAAAA,IAAI,EAAE,IALqB;AAM3BC,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,EAAE,EAAEV,MADR;AAEIW,MAAAA,KAAK,EAAE;AAFX,KADE,EAKF;AACIb,MAAAA,MAAM,EAAEG,wBADZ;AAEIW,MAAAA,MAAM,EAAE,QAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KALE,EAUF;AACIf,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CADZ;AAEIc,MAAAA,MAAM,EAAE,QAFZ;AAGIC,MAAAA,SAAS,EAAE;AAHf,KAVE;AANqB,GAAP,CAAD,EAsBnB,CAACZ,wBAAD,CAtBmB,CAAvB;AAwBAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACY,MAAR,GAAiBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAjB,CADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACArB,IAAAA,YAAY,CAACO,OAAD,CAAZ;AACH,GAZQ,EAYN,CAACJ,MAAD,EAASI,OAAT,CAZM,CAAT;AAcA,SAEI;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAIH,CA7CD;;AA+CA,eAAeL,IAAf","sourcesContent":["import React, { useEffect, useMemo } from 'react';\r\nimport { getPoints } from '../helpers/helper';\r\nconst functionPlot = require(\"function-plot\");\r\n\r\nconst MapQ = ({ points, pValue, qValue }) => {\r\n    // puntos que construyen la function de la trayectorias\r\n    const pointsTrajectoryFunction = useMemo(() => getPoints(pValue, qValue), [qValue, pValue]);\r\n    const options = useMemo(() => ({\r\n        title: 'Diagrama q vs a',\r\n        yAxis: { domain: [-5, 5] },\r\n        width: 800,\r\n        height: 400,\r\n        grid: true,\r\n        data: [\r\n            {\r\n                fn: qValue,\r\n                color: 'blue'\r\n            },\r\n            {\r\n                points: pointsTrajectoryFunction,\r\n                fnType: 'points',\r\n                graphType: 'polyline',\r\n            },\r\n            {\r\n                points: [0, 0],\r\n                fnType: 'points',\r\n                graphType: 'scatter',\r\n            }\r\n        ]\r\n    }), [pointsTrajectoryFunction]);\r\n\r\n    useEffect(() => {\r\n        options.target = document.querySelector(\"#mapq\");\r\n        // options.data[2] = {\r\n        //     points: points.length > 0 ? [points] : [0,0],\r\n        //     fnType: 'points',\r\n        //     graphType: 'scatter',\r\n        //     color: 'red',\r\n        //     attr: {\r\n        //         r: 3,\r\n        //     },\r\n        // };\r\n        functionPlot(options);\r\n    }, [points, options]);\r\n\r\n    return (\r\n\r\n        <div id=\"mapq\" />\r\n    );\r\n};\r\n\r\nexport default MapQ;"]},"metadata":{},"sourceType":"module"}
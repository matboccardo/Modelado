{"ast":null,"code":"/**\n * Created by mauricio on 3/29/15.\n */\n'use strict';\n\nvar d3 = window.d3;\n\nmodule.exports = function (options) {\n  var annotations;\n  var xScale = options.owner.meta.xScale;\n  var yScale = options.owner.meta.yScale;\n  var line = d3.svg.line().x(function (d) {\n    return d[0];\n  }).y(function (d) {\n    return d[1];\n  });\n\n  annotations = function (parentSelection) {\n    parentSelection.each(function () {\n      // join\n      var current = d3.select(this);\n      var selection = current.selectAll('g.annotations').data(function (d) {\n        return d.annotations || [];\n      }); // enter\n\n      selection.enter().append('g').attr('class', 'annotations'); // enter + update\n      // - path\n\n      var yRange = yScale.range();\n      var xRange = xScale.range();\n      var path = selection.selectAll('path').data(function (d) {\n        if (d.hasOwnProperty('x')) {\n          return [[[0, yRange[0]], [0, yRange[1]]]];\n        } else {\n          return [[[xRange[0], 0], [xRange[1], 0]]];\n        }\n      });\n      path.enter().append('path').attr('stroke', '#eee').attr('d', line);\n      path.exit().remove(); // enter + update\n      // - text\n\n      var text = selection.selectAll('text').data(function (d) {\n        return [{\n          text: d.text || '',\n          hasX: d.hasOwnProperty('x')\n        }];\n      });\n      text.enter().append('text').attr('y', function (d) {\n        return d.hasX ? 3 : 0;\n      }).attr('x', function (d) {\n        return d.hasX ? 0 : 3;\n      }).attr('dy', function (d) {\n        return d.hasX ? 5 : -5;\n      }).attr('text-anchor', function (d) {\n        return d.hasX ? 'end' : '';\n      }).attr('transform', function (d) {\n        return d.hasX ? 'rotate(-90)' : '';\n      }).text(function (d) {\n        return d.text;\n      });\n      text.exit().remove(); // enter + update\n      // move group\n\n      selection.attr('transform', function (d) {\n        if (d.hasOwnProperty('x')) {\n          return 'translate(' + xScale(d.x) + ', 0)';\n        } else {\n          return 'translate(0, ' + yScale(d.y) + ')';\n        }\n      }); // exit\n\n      selection.exit().remove();\n    });\n  };\n\n  return annotations;\n};","map":null,"metadata":{},"sourceType":"script"}
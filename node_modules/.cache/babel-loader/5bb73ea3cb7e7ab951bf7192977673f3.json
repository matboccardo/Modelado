{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\L1000246\\\\Desktop\\\\Modelado2\\\\Modelado\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport const useTwoPointsPrecision = (graph, renderUpdate, forkPoints) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        shouldUpdate = _useState2[0],\n        setShouldUpdate = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        xPoint = _useState4[0],\n        setXPoint = _useState4[1];\n\n  useEffect(() => {\n    if (graph) {\n      graph.on(['mousemove'], ({\n        x,\n        y\n      }) => {\n        if (!shouldUpdate) {\n          const closePoint = forkPoints.filter(p => Math.abs(p - x) < 0.01);\n\n          if (closePoint.length > 0) {\n            setXPoint(closePoint[0]);\n            setShouldUpdate(true);\n          }\n        }\n      });\n    }\n  }, [graph]);\n  useEffect(() => {\n    if (shouldUpdate) {\n      graph.tip.move({\n        x: xPoint,\n        y: 0\n      });\n      renderUpdate(xPoint);\n      setShouldUpdate(false);\n    }\n  }, [shouldUpdate]);\n};","map":{"version":3,"sources":["C:\\Users\\L1000246\\Desktop\\Modelado2\\Modelado\\src\\customHooks\\index.js"],"names":["useState","useEffect","useTwoPointsPrecision","graph","renderUpdate","forkPoints","shouldUpdate","setShouldUpdate","xPoint","setXPoint","on","x","y","closePoint","filter","p","Math","abs","length","tip","move"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,UAAtB,KAAqC;AAAA,oBAC9BL,QAAQ,CAAC,KAAD,CADsB;AAAA;AAAA,QAC/DM,YAD+D;AAAA,QACjDC,eADiD;;AAAA,qBAE1CP,QAAQ,CAAC,IAAD,CAFkC;AAAA;AAAA,QAE/DQ,MAF+D;AAAA,QAEvDC,SAFuD;;AAGtER,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGE,KAAH,EAAS;AACTA,MAAAA,KAAK,CAACO,EAAN,CAAS,CAAC,WAAD,CAAT,EAAwB,CAAC;AAACC,QAAAA,CAAD;AAAGC,QAAAA;AAAH,OAAD,KAAW;AAC/B,YAAG,CAACN,YAAJ,EAAiB;AACjB,gBAAMO,UAAU,GAAGR,UAAU,CAACS,MAAX,CAAkBC,CAAC,IAAIC,IAAI,CAACC,GAAL,CAASF,CAAC,GAACJ,CAAX,IAAgB,IAAvC,CAAnB;;AACA,cAAGE,UAAU,CAACK,MAAX,GAAoB,CAAvB,EAAyB;AACrBT,YAAAA,SAAS,CAACI,UAAU,CAAC,CAAD,CAAX,CAAT;AACAN,YAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACA;AACJ,OARD;AASC;AAAC,GAXG,EAYR,CAACJ,KAAD,CAZQ,CAAT;AAcAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGK,YAAH,EAAgB;AACZH,MAAAA,KAAK,CAACgB,GAAN,CAAUC,IAAV,CAAe;AAACT,QAAAA,CAAC,EAAEH,MAAJ;AAAYI,QAAAA,CAAC,EAAE;AAAf,OAAf;AACAR,MAAAA,YAAY,CAACI,MAAD,CAAZ;AACAD,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ,GANQ,EAMP,CAACD,YAAD,CANO,CAAT;AAOH,CAxBM","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useTwoPointsPrecision = (graph, renderUpdate, forkPoints) => {\r\n    const [shouldUpdate, setShouldUpdate] = useState(false); \r\n    const [xPoint, setXPoint] = useState(null);\r\n    useEffect(() => {\r\n        if(graph){\r\n        graph.on(['mousemove'], ({x,y}) => {\r\n            if(!shouldUpdate){\r\n            const closePoint = forkPoints.filter(p => Math.abs(p-x) < 0.01);\r\n            if(closePoint.length > 0){\r\n                setXPoint(closePoint[0]);\r\n                setShouldUpdate(true);  \r\n            }\r\n            }\r\n        });  \r\n        }}\r\n    ,[graph]);\r\n\r\n    useEffect(() => {\r\n        if(shouldUpdate){\r\n            graph.tip.move({x: xPoint, y: 0});\r\n            renderUpdate(xPoint);\r\n            setShouldUpdate(false);  \r\n        }\r\n    },[shouldUpdate]);\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * Created by mauricio on 3/29/15.\n */\n'use strict';\n\nvar globals = require('./globals');\n\nvar evalTypeFn = {\n  interval: require('./samplers/interval'),\n  builtIn: require('./samplers/builtIn')\n  /**\n   * Computes the endpoints x_lo, x_hi of the range\n   * from which the sampler will take samples\n   *\n   * @param {Chart} chart\n   * @param {Object} d An item from `data`\n   * @returns {Array}\n   */\n\n};\n\nfunction computeEndpoints(chart, d) {\n  var range = d.range || [-Infinity, Infinity];\n  var scale = chart.meta.xScale;\n  var start = Math.max(scale.domain()[0], range[0]);\n  var end = Math.min(scale.domain()[1], range[1]);\n  return [start, end];\n}\n/**\n * Decides which sampler function to call based on the options\n * of `data`\n *\n * @param {Object} chart Chart instance which is orchestating this sampling operation\n * @param {Object} d a.k.a a single item from `data`\n * @returns {Array}\n */\n\n\nfunction evaluate(chart, d) {\n  var range = computeEndpoints(chart, d);\n  var data;\n  var evalFn = evalTypeFn[d.sampler];\n  var nSamples = d.nSamples || Math.min(globals.MAX_ITERATIONS, globals.DEFAULT_ITERATIONS || chart.meta.width * 2);\n  data = evalFn(chart, d, range, nSamples); // NOTE: it's impossible to listen for the first eval event\n  // as the event is already fired when a listener is attached\n\n  chart.emit('eval', data, d.index, d.isHelper);\n  return data;\n}\n\nmodule.exports = evaluate;","map":null,"metadata":{},"sourceType":"script"}
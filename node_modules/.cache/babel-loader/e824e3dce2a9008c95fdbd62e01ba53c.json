{"ast":null,"code":"/**\n * Created by mauricio on 3/29/15.\n */\n'use strict';\n\nvar d3 = window.d3;\n\nvar evaluate = require('../evaluate');\n\nvar utils = require('../utils');\n\nmodule.exports = function (chart) {\n  var xScale = chart.meta.xScale;\n  var yScale = chart.meta.yScale;\n\n  function scatter(selection) {\n    selection.each(function (d) {\n      var i, j;\n      var index = d.index;\n      var color = utils.color(d, index);\n      var evaluatedData = evaluate(chart, d); // scatter doesn't need groups, therefore each group is\n      // flattened into a single array\n\n      var joined = [];\n\n      for (i = 0; i < evaluatedData.length; i += 1) {\n        for (j = 0; j < evaluatedData[i].length; j += 1) {\n          joined.push(evaluatedData[i][j]);\n        }\n      }\n\n      var innerSelection = d3.select(this).selectAll(':scope > circle').data(joined);\n      innerSelection.enter().append('circle');\n      innerSelection.attr('fill', d3.hsl(color.toString()).brighter(1.5)).attr('stroke', color).attr('opacity', 0.7).attr('r', 1).attr('cx', function (d) {\n        return xScale(d[0]);\n      }).attr('cy', function (d) {\n        return yScale(d[1]);\n      }).attr(d.attr);\n      innerSelection.exit().remove();\n    });\n  }\n\n  return scatter;\n};","map":null,"metadata":{},"sourceType":"script"}